---
# SPDX-FileCopyrightText: NONE
# SPDX-License-Identifier: CC0-1.0

name: "Periodic checks"
permissions: {}
on:
  push:
    paths:
      - "gradle/wrapper/gradle-wrapper.jar"
      - "**codecov.yml"
      - "Makefile"
  pull_request:
    paths:
      - "gradle/wrapper/gradle-wrapper.jar"
      - "**codecov.yml"
      - "Makefile"
  schedule:
    # At 03:00 AM, every 30 days (UTC)
    - cron: "0 3 */30 * *"
  workflow_dispatch:

jobs:
  base-job:
    name: "Base"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v5
      - name: "Validate Gradle Wrapper"
        uses: gradle/actions/wrapper-validation@v4
      - name: "Validate Codecov configuration"
        shell: bash
        run: |
          # Validating Codecov configuration
          codecovyml_path='${{ github.workspace }}/.codecov.yml'
          if test -f "${codecovyml_path}"; then
            status='0'
            wget -qO- --post-file "${codecovyml_path:?}" https://codecov.io/validate || status="${?}"
            if test "${status:?}" -eq 0; then echo 'Result: pass'; else echo 'Result: fail'; exit "${status:?}"; fi
          fi
          codecovyml_path='${{ github.workspace }}/codecov.yml'
          if test -f "${codecovyml_path}"; then
            status='0'
            wget -qO- --post-file "${codecovyml_path:?}" https://codecov.io/validate || status="${?}"
            if test "${status:?}" -eq 0; then echo 'Result: pass'; else echo 'Result: fail'; exit "${status:?}"; fi
          fi

  makefile-validation:
    name: "Validate makefile"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v5
      - name: "Validation"
        uses: Uno-Takashi/checkmake-action@v2
        with:
          makefile: "Makefile"

  dep5-validation:
    name: "Validate dep5"
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v5
      - name: "Validation"
        shell: bash
        run: |
          # Validating dep5
          if ! test -e './.reuse/dep5'; then exit 0; fi
          sudo apt-get -qq update
          sudo apt-get -qq -y install cme 1> /dev/null
          status='0'
          cme check dpkg-copyright -file './.reuse/dep5' || status="${?}"
          if test "${status:?}" -eq 0; then echo 'Result: pass'; else echo 'Result: fail'; exit "${status:?}"; fi
